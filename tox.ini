[tox]
envlist = py3{6,7,8,9,10}-{linux,macos,windows}
skip_missing_interpreters = true
isolated_build = true
skipsdist = true

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310

[gh-actions:env]
PLATFORM =
    ubuntu-20.04: linux
    macos-latest: macos
    windows-latest: windows

[base]
deps =
    pip>=21.1
    versioningit

[build]
deps =
    pip>=21.1
    build
    twine

[testenv]
skip_install = true

setenv =
    PYTHONPATH = {toxinidir}/src
    DISABLE_MAVNATIVE = True
    MDEF_PATH = {envsitepackagesdir}/pymavlink/message_definitions/v1.0

passenv =
    CC
    CXX
    LD
    AR
    NM
    RANLIB
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    XDG_*
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

allowlist_externals =
    bash

deps =
    {[base]deps}
    #-r requirements.txt
    pymavlink
    .

commands =
    bash -c 'cp $MDEF_PATH/{posargs:paparazzi}.xml in.xml'
    ymltoxml in.xml
    bash -c 'cp in.yaml out.yaml'
    ymltoxml out.yaml
    bash -c 'diff -u in.xml out.xml || true'
    ymltoxml --version
    ymltoxml --dump-config
    ymltoxml out.txt

[testenv:clean]
allowlist_externals =
    bash

deps =
    pip>=21.1

commands =
    bash -c 'rm -rf in.* out.* paparazzi.xml munch/'

[testenv:setup]
passenv =
    CI
    PYTHONIOENCODING

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    #-r requirements.txt

commands =
    python setup.py egg_info

[testenv:deploy]
skip_install = true

passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[build]deps}

commands =
    python -m build .
    twine check dist/*

[testenv:check]
skip_install = true
passenv = CI

deps =
    #{[base]deps}
    pip>=21.1

commands =
    pip install ymltoxml --force-reinstall --pre --prefer-binary -f dist/
    ymltoxml --version

[testenv:lint]
passenv =
    CI
    PYTHONIOENCODING

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    pylint
    -r requirements.txt

commands =
    pylint --fail-under=9.90 src/ymltoxml/ymltoxml.py

[testenv:style]
passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    flake8
    flake8-bugbear

commands =
    flake8 scripts/ src/

[testenv:mypy]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    mypy
    importlib_resources
    -r requirements.txt

commands =
    stubgen -m munch --export-less -o {toxinidir}
    python -m mypy --follow-imports=normal --install-types --non-interactive src/

[testenv:isort]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    isort
    -r requirements.txt

commands =
    python -m isort scripts/ src/
